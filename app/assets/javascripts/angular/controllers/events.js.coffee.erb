`var win = typeof(window) === 'undefined' ? {} : window`
`var mod = typeof(module) === 'undefined' ? {} : module`
win.tableforeight = win.tableforeight || {}


# Angular Routing for UI
win.angular.module('tableforeight', ['apis'])
  .config [ "$httpProvider", (provider) ->
	  #Set CSRF tokent for ROR authentication
      provider.defaults.headers.common['X-CSRF-Token'] = $('meta[name=csrf-token]').attr('content')
  ]
  
# Retrieves all Events from ror REST/JSON API ('/api/events')
mod.exports = win.tableforeight.listCtrl = ($scope, $location, Events) ->
  # Call all Events
  $scope.events = Events.query()


# Creates a new Events and POST to ror REST/JSON API ('/api/events')
# Creates new Votes and POST to ror REST/JSON API ('/api/events/:event_id/votes')
mod.exports = win.tableforeight.newCtrl = ($scope, $location, Events, Votes) ->

  $scope.tesda = ->
    testValue()

  # Saves the new event from the UI
  $scope.save = ->
    Events.save $scope.events, (events) ->
			  #Gets List of Guests in an array format
			  guest_list = $scope.guests.split '\n'
			  for email in guest_list
			  			#Creating each for Vote with guest email for the relevant Event
			  			voting = new Votes(events.unique_id).create({ 'email': email })		
			  $location.path '/result/' + events.unique_id #Returns path to the results page


# Gets and sets Event to and from ror REST/JSON API ('/api/events/:event_id')
# Gets and sets Vote to and from ror REST/JSON API ('/api/votes/:vote_id')
mod.exports = win.tableforeight.resultCtrl = ($scope, $location, $routeParams, Event, Votes) ->
  self = @
  
  Event.get {event_id: $routeParams.event_id}, (event) ->
    self.original_event = event
    $scope.event = new Event self.original_event
    votes = new Votes($scope.event.unique_id).all()
    $scope.votes_view = get_votes(votes)

mod.exports = win.tableforeight.votingCtrl = ($scope, $location, $routeParams, Vote) ->
  self = @
  
  Vote.get {vote_id: $routeParams.event_id}, (vote) ->
    self.original_vote = vote
    $scope.vote = new Event self.original_vote
	
  $scope.isClean = ->
    angular.equals(self.original_vote, $scope.vote)

  $scope.save = ->
    window.vote = $scope.vote
    $scope.vote.$update ->
      $location.path '/'
